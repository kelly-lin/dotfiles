#!/bin/zsh

selected_worktree=$(git worktree list | awk '{ print $1 }' | sed '/.*\.bare/d' | fzf --reverse --header='git worktrees')
[[ -z $selected_worktree ]] && exit 0

repo_name=''
function {
  local num_of_worktrees=$(git worktree list | awk '{ print $1 }' | wc -l)
  if [[ $num_of_worktrees -eq 1 ]]; then
    repo_name=$(basename $(git rev-parse --show-toplevel))
    echo 'return 2'
    return
  fi

  # this command will fail when it is run inside a directory which is not in a
  # worktree
  git rev-parse --show-toplevel &> /dev/null
  if [[ $? -eq 0 ]]; then
    echo 'return 1'
    repo_name=$(git rev-parse --show-toplevel | awk '{n=split($0,p,"/"); print p[n-1]}' | tr . _)
    return
  fi

  repo_name=$(git rev-parse --git-dir | awk '{n=split($0,p,"/"); print p[n-1]}' | tr . _)
}

worktree_name=$(basename $selected_worktree | tr . _)

session_name=''
function {
  local num_of_worktrees=$(git worktree list | awk '{ print $1 }' | wc -l)
  if [[ $num_of_worktrees -eq 1 ]]; then
    session_name="$repo_name"
    return
  fi
  session_name="$repo_name ($worktree_name)"
}

# Switch to the session if it already exists and exit
tmux switch-client -t "$session_name" && exit 0

tmuxinator start -n $session_name -p $HOME/.config/tmuxinator/dev.yaml workspace=$selected_worktree
